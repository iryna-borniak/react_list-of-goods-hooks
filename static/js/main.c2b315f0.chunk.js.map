{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReverse","reorderedGoods","goods","sort","GoodA","GoodB","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","reverse","className","type","classNames","onClick","state","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAUMC,EAjCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAgBF,OAdqB,YAAIK,GAAOC,MAAK,SAACC,EAAOC,GAC3C,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,QAAUL,EAAMG,cAAcF,GAE5D,KAAKb,EAASI,KACd,QACE,OAAO,MAmBUc,CAAkBjB,EAAiB,CACxDI,aAOF,OAJIE,GACFE,EAAeU,UAIf,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYjB,IAAaL,EAASc,WAGtCS,QA3BkB,kBAAMjB,EAAYN,EAASc,WAmB/C,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYjB,IAAaL,EAASgB,SAGtCO,QAvCgB,kBAAMjB,EAAYN,EAASgB,SA+B7C,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAaf,IAGjBgB,QAnDa,kBAAMf,GAAW,SAACgB,GAAD,OAAYA,MA2C5C,sBAaEnB,GAAYE,IACZ,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA3DQ,WAChBjB,EAAYN,EAASI,MACrBI,GAAW,IAsDL,sBAUJ,6BACGC,EAAegB,KAAI,SAACC,GAAD,OAClB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCzHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c2b315f0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType }: ReorderOptions,\n) {\n  const visibleGoods = [...goods].sort((GoodA, GoodB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return GoodA.localeCompare(GoodB);\n\n      case SortType.LENGTH:\n        return GoodA.length - GoodB.length || GoodA.localeCompare(GoodB);\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const setSortByAlphabet = () => setSortType(SortType.ALPHABET);\n  const setSortByLength = () => setSortType(SortType.LENGTH);\n  const reverseGoods = () => setReverse((state) => !state);\n  const resetSort = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n  });\n\n  if (isReversed) {\n    reorderedGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={setSortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={setSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSort}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}